Compilation Results:
********************

load_tuples test: 10 pts total
Test 1: load tuple
+5: load_tuples: m,n,nnz match
+5: load_tuples: nodes match

gv_tuples test: 5 pts total
Test 2: gv
+5: gv_tuples

set_tuples test: 35 pts total
Test 3: set
+5: set_tuples: delete node at tail
+5: set_tuples: add node at head
+5: set_tuples: add node in the middle
+5: set_tuples: add node at tail
+5: set_tuples: delete node at head
+5: set_tuples: delete node middle
+5: set_tuples: delete node at tail

add_tuples test: 10 pts total
Test 4: add
 +10: add_tuples pass

mult_tuples test: 15 pts total
Test 5: mult
 +15: mult_tuples pass

save_tuples test: 10 pts total
Test 6: save
testing save_tuples, saving to save_test_tuples.txt

Printing diff of save tuples. If empty, 10 pts

10
destroy_tuples test: 5 pts total
Printing valgrind output. If no memory leaks/errors, 5 pts
==8346== Memcheck, a memory error detector
==8346== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==8346== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==8346== Command: ./test0 7
==8346== 
==8346== 
==8346== HEAP SUMMARY:
==8346==     in use at exit: 0 bytes in 0 blocks
==8346==   total heap usage: 65 allocs, 65 frees, 2,648 bytes allocated
==8346== 
==8346== All heap blocks were freed -- no leaks are possible
==8346== 
==8346== For counts of detected and suppressed errors, rerun with: -v
==8346== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Grade:
******
Late submission: 0
Functionality: 90/90
Comments and Style: 5/5
Intro paragraph: 5/5
Total: 100/100
